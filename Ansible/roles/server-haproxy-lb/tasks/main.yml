---
#Reference: https://itnext.io/create-a-highly-available-kubernetes-cluster-using-keepalived-and-haproxy-37769d0a65ba
- ansible.builtin.debug:
    msg: "################# STARTING ANSIBLE ROLE: server-haproxy-lb ##################"

# Installing haproxy and keepalived packages
- name: Installing haproxy and keepalived packages...
  ansible.builtin.dnf:
    name: '{{ item }}'
    state: present
    disable_gpg_check: yes
  loop:
    - "{{ haproxy_package }}"
    - "{{ keepalive_packages }}"
  become: true

#Reverse DNS Entry
- name: Fetching the server IP...
  ansible.builtin.shell: "/usr/bin/hostname -I | awk '{print $1}'"
  register: fetched_ip
  become: true

- name: Printing IP for host to register...
  ansible.builtin.debug:
    msg: "{{ fetched_ip.stdout | trim }}"

# Set SELinux boolean for haproxy
- name: Setting SELinux booleans for haproxy...
  ansible.posix.seboolean:
    name: "{{ item }}"
    state: yes
    persistent: yes
  loop:
    - httpd_can_network_connect
    - httpd_can_network_connect_db
    - httpd_setrlimit
  become: true

- name: Adding required ports to http_port_t...
  community.general.seport:
    ports: "{{ item }}"
    proto: tcp
    setype: http_port_t
    state: present
  with_items: "{{ ports_list }}"
  become: true

# Setting up haproxy.cfg
- name: Configuring haproxy.cfg as a load balancer...
  ansible.builtin.template:
    src: haproxy.cfg.j2
    dest: /etc/haproxy/haproxy.cfg
  become: true
  notify: Restarting haproxy...

# Setting up keepalived.conf
- name: Fetching VM short hostname...
  ansible.builtin.command: "/usr/bin/hostname --short"
  register: server_short_name
  become: true

- name: Setting facts for VM short hostname...
  ansible.builtin.set_fact:
    lb_short_name: "{{ server_fqdn.stdout.split('.')[0] }}"
  become: true

- name: Configuring keepalived.conf...
  ansible.builtin.template:
    src: "keepalived.conf.j2"
    dest: "/etc/keepalived/keepalived.conf"
  become: true

- name: Configuring keepalived-ip-updater script...
  ansible.builtin.template:
    src: "keepalived-ip-updater.sh.j2"
    dest: "/usr/local/bin/keepalived-ip-updater.sh"
    mode: "0754"
    setype: "keepalived_unconfined_script_exec_t"
  become: true

#Enable then start keepalived and haproxy
- name: Enabling and starting keepalived and haproxy...
  ansible.builtin.service:
    name: '{{ item }}'
    state: started
    enabled: yes
    daemon_reload: yes
  loop:
    - 'keepalived'
    - 'haproxy'
  become: true

# Enable firewall rules
- name: Enabling firewall rules...
  ansible.posix.firewalld:
    port: "{{ item }}/tcp"
    permanent: yes
    immediate: yes
    state: enabled
  with_items: "{{ ports_list }}"
  become: true
