---
#This playbook will deploy a DNS Record for the Kubernetes Application Endpoint
#References:

- ansible.builtin.debug:
    msg: "########### STARTING ANSIBLE ROLE: kubeapp-dnsrecord ##############"

- name: Initializing Kerberos token with kinit...
  ansible.builtin.shell: "/bin/kinit admin <<< {{ freeipa_admin_passwd }}"
  become: true
  delegate_to: '{{ idam_server_ip }}'

#DNS A Record for Kubernetes App Endpoint
- name: Creating dns record entry for kubeapp...
  community.general.ipa_dnsrecord:
    name: "{{ kubeapp_shortname }}"
    record_type: "A"
    zone_name: "{{ domain_tld }}"
    record_value: "{{ ingress_lb_ip }}"
    state: present
    ipa_host: "{{ idam_short_hostname }}.{{ domain_tld }}"
    ipa_user: "admin"
    ipa_pass: "{{ freeipa_admin_passwd }}"
    ipa_timeout: 30
    validate_certs: no
  become: true
  delegate_to: '{{ idam_server_ip }}'

- name: Staging directory for cert-manager...
  ansible.builtin.file:
    path: "{{ kubeapp_dir }}/gateway-endpoints"
    state: directory

- name: Staging gateway-endpoint manifests...
  ansible.builtin.template:
    src: '{{ item.f }}.j2'
    dest: '{{ item.d }}/{{ item.f }}'
  with_items:
    - f: '01-gateway.yaml'
      d: "{{ kubeapp_dir }}/gateway-endpoints"
    - f: '02-http-route.yaml'
      d: "{{ kubeapp_dir }}/gateway-endpoints"

- name: Deploying cert-manager using flux-controller...
  ansible.builtin.shell: |
    KUBECONFIG={{ kubeconfig }} kubectl apply -f {{ item }}
  loop:
    - '01-gateway.yaml'
    - '02-http-route.yaml'
  args:
    executable: /bin/bash
    chdir: "{{ kubeapp_dir }}/gateway-endpoints"
